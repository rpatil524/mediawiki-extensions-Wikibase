type Query {
  item(id: ItemId!): Item
}

scalar ItemId

type Item {
  id: ItemId!
  label(languageCode: LanguageCode!): String
  description(languageCode: LanguageCode!): String
  aliases(languageCode: LanguageCode!): [String]!
  sitelink(siteId: SiteId!): Sitelink
  statements(propertyId: String!): [Statement]!
}

scalar LanguageCode

scalar SiteId

type Sitelink {
  title: String!
  url: String!
}

type Statement {
  id: String!
  rank: Rank!
  qualifiers(propertyId: String!): [PropertyValuePair]!
  property: PredicateProperty!
  value: Value!
}

enum Rank {
  deprecated
  normal
  preferred
}

type PropertyValuePair {
  property: PredicateProperty!
  value: Value!
}

type PredicateProperty {
  id: String!
  dataType: String
  label(languageCode: LanguageCode!): String
}

union Value = StringValue | ItemValue

type StringValue {
  type: String!
  content: String!
}

type ItemValue {
  type: String!
  content: ValueItem!
}

type ValueItem {
  id: String!
}
